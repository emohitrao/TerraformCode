# Generate a random app name
resource "random_string" "app-name" {
  length  = 5
  upper   = false
  numeric  = false
  lower   = true
  special = false
}

locals {
  region           = "us-west-2"
  aws_region       = "us-west-2"
  company_code     = "sdge"
  application_code = "iac"
  environment_code = "sbx"
  region_code      = "wus2"
  namespace        = "iac-sbx-aws.sempra.com"
  owner            = "IAC team"
  application_use  = random_string.app-name.result
}

provider "aws" {
  region = local.region
}

// create bucket
module "s3-bucket" {
  source = "git@ssh.dev.azure.com:v3/SempraUtilities/SempraUtilities/terraform-aws-seu-s3?ref=release"

  company_code                   = local.company_code
  application_code               = local.application_code
  environment_code               = local.environment_code
  region_code                    = local.region_code
  application_use                = "athena-test-${local.application_use}"
  owner                          = local.owner
  create_bucket                  = true
  force_destroy                  = true
  create_log_bucket              = false
  attach_alb_log_delivery_policy = false
  object_ownership               = "BucketOwnerPreferred"
  control_object_ownership       = true

  tags = {
    tag-version         = "Holds the version of the tagging format."
    billing-guid        = "Internal order - from SAP"
    support-group       = "Distribution list in email format"
    environment         = "Environment deployed"
    cmdb-ci-id          = "CI ID as generated by ServiceNow CMDB"
    data-classification = "Data privacy classification"
    portfolio           = "Portfolio associated with the application"
  }
}

// create kms key to encrypt athena data
resource "aws_kms_key" "athena_kms_key" {
  deletion_window_in_days = 7
  description             = "Athena KMS Key"
  enable_key_rotation     = true //variable needed for checkov test
}

module "athena" {
  source           = "../../"
  company_code     = local.company_code
  application_code = local.application_code
  environment_code = local.environment_code
  region_code      = local.region_code
  application_use  = "athena-test${random_string.app-name.result}"
  tags = {
    name                = "test"
    portfolio           = "IaC"
    unit                = "12345"
    tag-version         = "Holds the version of the tagging format."
    billing-guid        = "Internal order - from SAP"
    support-group       = "Distribution list in email format"
    environment         = "Environment deployed"
    cmdb-ci-id          = "CI ID as generated by ServiceNow CMDB"
    data-classification = "Data privacy classification"
  }

  create_athena_database = true
  db_force_destroy       = false
  athena_db_name         = "iac_test_athena_db"
  athena_database_bucket = module.s3-bucket.s3_bucket_id
  db_encryption_option   = "SSE_KMS"
  db_kms_key_arn         = aws_kms_key.athena_kms_key.arn

  create_athena_named_query = false
  create_workgroup          = false
  enable_monitoring = false
  athena_alarm = []
}

