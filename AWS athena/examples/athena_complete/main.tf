# Generate a random app name
resource "random_string" "app-name" {
  length  = 12
  upper   = false
  numeric  = false
  lower   = true
  special = false
}

locals {
  region           = "us-west-2"
  aws_region       = "us-west-2"
  company_code     = "sdge"
  application_code = "iac"
  environment_code = "sbx"
  region_code      = "wus2"
  namespace        = "iac-sbx-aws.sempra.com"
  owner            = "IAC team"
  tags = {
    name                = "Name of the resource"
    tag-version         = "Holds the version of the tagging format"
    billing-guid        = "Billing Guid"
    unit                = "Organizational unit ex: SDGE SoCalGas Ent Corp"
    portfolio           = "Portfolio associated with the application"
    support-group       = "Distribution list in email format"
    environment         = "Environment deployed to ex: DEV TST QA PRD"
    cmdb-ci-id          = "CI ID as generated by ServiceNow or CMDB. Format: ASM followed by a 7-digit zero padded value"
    data-classification = "Data privacy classification ex: public sensitive confidential"
    portfolio           = "Portfolio associated with the application"
  }
}

provider "aws" {
  region = local.region
}

// create bucket
module "s3-bucket" {
  source  = "app.terraform.io/SempraUtilities/seu-s3/aws"
  version = "X.X.X"
  company_code                   = local.company_code
  application_code               = local.application_code
  environment_code               = local.environment_code
  region_code                    = local.region_code
  application_use                = "athena-test"
  owner                          = local.owner
  create_bucket                  = true
  create_log_bucket              = false
  attach_alb_log_delivery_policy = false
  tags = {
    tag-version         = "Holds the version of the tagging format."
    billing-guid        = "Internal order - from SAP"
    support-group       = "Distribution list in email format"
    environment         = "Environment deployed"
    cmdb-ci-id          = "CI ID as generated by ServiceNow CMDB"
    data-classification = "Data privacy classification"
  }
}

// upload sample data
resource "aws_s3_object" "object" {
  bucket                 = module.s3-bucket.s3_bucket_id
  key                    = "test_data/sample_json.json"
  source                 = "sample_json.json"
  server_side_encryption = "AES256"
}

// create IAM role for crawler
module "athena_crawler_role" {
  source  = "app.terraform.io/SempraUtilities/seu-iam-role/aws"
  version = "X.X.X"
  company_code      = local.company_code
  application_code  = local.application_code
  environment_code  = local.environment_code
  region_code       = local.region_code
  application_use   = "glue-crawler-test"
  description       = "Test IAM role for Athena"
  service_resources = ["glue.amazonaws.com"]

  tags = local.tags
}

// create policy
resource "aws_iam_policy" "policy" {
  name        = "test-policy"
  description = "A test policy"

  policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "s3:GetObject",
        "s3:PutObject"
      ],
      "Effect": "Allow",
      "Resource": "${module.s3-bucket.s3_bucket_arn}*"
    }
  ]
}
EOF
}

// attach policy for role
resource "aws_iam_policy_attachment" "attach-custom" {
  name       = "athena-test-attachment"
  roles      = [module.athena_crawler_role.id]
  policy_arn = aws_iam_policy.policy.arn
}

resource "aws_iam_role_policy_attachment" "attach-managed-glue" {
  role       = module.athena_crawler_role.id
  policy_arn = "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
}

// create kms key to encrypt athena data
resource "aws_kms_key" "athena_kms_key" {
  deletion_window_in_days = 7
  description             = "Athena KMS Key"
  enable_key_rotation     = true
}

module "sns" {
  source  = "app.terraform.io/SempraUtilities/seu-sns/aws"
  version = "X.X.X"
  application_use       = "athena-test"
  company_code          = local.company_code
  application_code      = local.application_code
  environment_code      = local.environment_code
  region_code           = local.region_code
  tags                  = local.tags
  email_subscriber_list = ["akalavan@sdgecontractor.com"]
  create_email_topic    = true
}


module "athena" {
  source           = "../.."
  company_code     = local.company_code
  application_code = local.application_code
  environment_code = local.environment_code
  region_code      = local.region_code
  application_use  = "athena-test"
  tags             = local.tags

  # option to create Athena workgroup and corresponding variables
  create_workgroup                   = true
  workgroup_force_destroy            = true
  workgroup_description              = "Example IaC Athena Workgroup"
  enforce_workgroup_configuration    = true
  publish_cloudwatch_metrics_enabled = true
  output_location                    = "s3://${module.s3-bucket.s3_bucket_id}/output/"
  workgroup_encryption_option        = "SSE_KMS"
  workgroup_kms_key_arn              = aws_kms_key.athena_kms_key.arn

  # option to create Athena DB and corresponding variables
  create_athena_database = true
  db_force_destroy       = false
  athena_db_name         = "iac_test_athena_db"
  athena_database_bucket = module.s3-bucket.s3_bucket_id
  db_encryption_option   = "SSE_KMS"
  db_kms_key_arn         = aws_kms_key.athena_kms_key.arn

  create_athena_named_query = true
  named_query_name          = "iac_test_query"
  named_query_description   = "iac test named query"
  named_query_workgroup     = module.athena.athena_workgroup_id
  named_query_database      = module.athena.athena_database_id
  #named_query_query         = "SELECT * FROM \"${module.glue-crawler.glue_database_name}\".\"test\" limit 10;"
  named_query_query = "SELECT * FROM \"test\".\"test\" limit 10;"

  
  enable_monitoring = true
  alarm_action = module.sns.email_subscription_arn[0]
  athena_alarm = [
    {
      alarm_name = "athena-query-processed-bytes"
      comparison_operator = "GreaterThanOrEqualToThreshold"
      evaluation_periods = 1
      metric_name = "ProcessedBytes"
      namespace = "AWS/Athena"
      period = 300
      statistic = "Sum"
      threshold = 10240
      alarm_description = "Alarm for Athena queryprocessed-bytes exceeding 10 KB"
      alarm_action = module.sns.email_subscription_arn[0]
    },
    // Add more alarms as needed
  ]
}

module "glue-crawler" {
  source  = "app.terraform.io/SempraUtilities/seu-glue-crawler/aws"
  version = "X.X.X"
  company_code     = local.company_code
  application_code = local.application_code
  environment_code = local.environment_code
  region_code      = local.region_code
  application_use  = "s3"

  iam_role_arn  = module.athena_crawler_role.arn
  iam_role_name = module.athena_crawler_role.id

  glue_crawler_map = {
    crawler_s3 = {
      name          = "crawler"
      database_name = "test_data_db"
      s3_targets = {
        s3_target1 = {
          path = "s3://${module.s3-bucket.s3_bucket_id}/test_data/"
        }
      }
      dynamodb_targets = {}
      jdbc_targets     = {}
      catalog_targets  = {}
      mongodb_targets  = {}
      optional_arguments = {
        description            = "Athena Test Crawler"
        recrawl_policy         = "CRAWL_EVERYTHING"
        schema_delete_behavior = "LOG"
        schema_update_behavior = "LOG"
      }
    }
  }
  tags = local.tags
}
